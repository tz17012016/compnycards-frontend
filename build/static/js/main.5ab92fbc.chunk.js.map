{"version":3,"sources":["services/apiSer.js","services/userSer.js","comps/navbar.js","comps/CardsList.js","comps/common/pageHeader.js","comps/common/pagenation.js","comps/home.js","comps/about.js","comps/page404.js","comps/signup.js","comps/login.js","comps/footer.js","comps/userInfo.js","services/authSer.js","comps/common/protectedRoute.js","comps/favoriteCards.js","comps/biz/myCards.js","comps/biz/addCard.js","comps/biz/editCard.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","doApiGet","_url","a","axios","get","resp","data","doApiMethod","_method","_bodyData","method","url","headers","localStorage","user","updateUserData","_id","removeItem","getUserData","updateUserCardsAddFav","_bizCardNumber","temp_ar","cards","Set","splice","length","n","toast","success","error","removeUserCardFav","filter","item","warning","NavBar","props","useState","showMobileNav","setShowMobileNav","setUser","history","useHistory","useEffect","location","logOut","push","info","className","onClick","style","display","to","Fragment","biz","CardsList","userData","setUserData","update","forceUpdate","showBtnFav","includes","bizNumber","ar","map","bg","bizImage","backgroundImage","bizName","bizDescription","bizPhone","bizAddress","PageHeader","title","Pagenation","countPage","setCountPage","doApi","urlOfItemNum","Math","ceil","count","Array","i","linkTo","Home","cards_ar","setCardsAr","quries","URLSearchParams","window","search","page","About","Page404","SignUpClient","useForm","register","handleSubmit","errors","formState","onSubForm","formData","response","code","emailRef","required","pattern","passwordRef","minLength","nameRef","checkRef","onSubmit","type","email","password","fullName","Login","setItem","token","Footer","Date","getFullYear","UserInfo","userInfo","setUserInfo","dateCreated","createdAt","substr","indexOf","name","checkIfUser","err","ProtectedRoute","checkTokenUser","bizRoute","status","exact","path","render","comp","FavoriteCards","console","log","MyCards","setAr","reverse","delCard","confirm","background","AddCard","descRef","addressRef","phoneRef","imageRef","dataForm","rows","EditCard","setCard","setValue","computedMatch","params","id","dark","App","ifUserLogin","component","minHeight","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ab92fbc.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport const API_URL = 'https://compnycards-backend.herokuapp.com';\r\nexport const PER_PAGE = 5;\r\n\r\nexport const doApiGet = async (_url) => {\r\n  try {\r\n    let resp = await axios.get(_url);\r\n    return resp.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const doApiMethod = async (_url, _method, _bodyData) => {\r\n  try {\r\n    let resp = await axios({\r\n      method: _method,\r\n      url: _url,\r\n      data: _bodyData,\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'x-auth-token': localStorage['tok'],\r\n      },\r\n    });\r\n    return resp.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport { API_URL, doApiMethod } from \"./apiSer\";\r\n\r\nlet user = {};\r\n\r\n\r\nexport const updateUserData = async () => {\r\n  if (localStorage[\"tok\"]) {\r\n    let url = API_URL + \"/users/userInfo\";\r\n    try{\r\n      let data = await doApiMethod(url,\"GET\");\r\n      if(data._id){\r\n        user = data\r\n      }\r\n      else{\r\n        localStorage.removeItem(\"tok\");\r\n        user = {}\r\n      }\r\n      return user\r\n    }\r\n    catch(err){\r\n      localStorage.removeItem(\"tok\");\r\n      user = {};\r\n      return user\r\n    }\r\n  }\r\n  else{\r\n    user = {}\r\n    return user;\r\n  }\r\n}\r\n\r\nexport const getUserData = () => {\r\n  return user;\r\n}\r\n\r\nexport const updateUserCardsAddFav = async(_bizCardNumber) => {\r\n  let temp_ar  = [...user.cards,_bizCardNumber];\r\n   temp_ar = new Set([...temp_ar]);\r\n  user.cards.splice(0, user.cards.length, ...temp_ar);\r\n  \r\n  let url = API_URL+\"/users/cards\"\r\n  try{\r\n    let data = await doApiMethod(url,\"PATCH\",{cards:user.cards});\r\n    if(data.n === 1){\r\n      toast.success(\"Cards fav update\")\r\n    }\r\n    return data;\r\n  }\r\n  catch(err){\r\n    toast.error(\"There problem , try again later !\")\r\n    throw err\r\n  }\r\n}\r\n\r\nexport const removeUserCardFav = async(_bizCardNumber) => {\r\n  let temp_ar  = user.cards.filter(item => item !== _bizCardNumber)\r\n  user.cards.splice(0, user.cards.length, ...temp_ar);\r\n  let url = API_URL+\"/users/cards\"\r\n  try{\r\n    let data = await doApiMethod(url,\"PATCH\",{cards:user.cards});\r\n    if(data.n === 1){\r\n      toast.warning(\"Cards fav removed\")\r\n    }\r\n    return data;\r\n  }\r\n  catch(err){\r\n    toast.error(\"There problem , try again later !\")\r\n    throw err\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getUserData, updateUserData } from '../services/userSer';\r\nfunction NavBar(props) {\r\n  let [showMobileNav, setShowMobileNav] = useState(false);\r\n  let [user,setUser] = useState(null);\r\n  let history = useHistory()\r\n\r\n\r\n  useEffect(() => {\r\n    setUser(getUserData())\r\n  },[props.location])\r\n\r\n  const hideNavMobile = () => {\r\n    setShowMobileNav(false);\r\n  }\r\n\r\n  const logOut = async() => {\r\n    localStorage.removeItem(\"tok\");\r\n     updateUserData();\r\n    history.push(\"/login\");\r\n    toast.info(\"You logged out from system !\");\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"container nav_top p-2\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"logo col-lg-3 d-flex justify-content-between align-items-center\">\r\n          <h2 className=\"text-danger\">Cards project</h2>\r\n          <div className=\"burger\" onClick={() => {\r\n            setShowMobileNav(!showMobileNav);\r\n          }}>\r\n            <i className=\"fa fa-bars fs-2\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n        <nav onClick={hideNavMobile} className={\"col-lg-9 text-end\"} style={{ display: showMobileNav && \"block\" }} >\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/about\">About</Link>\r\n          {!localStorage[\"tok\"] ?\r\n            <React.Fragment>\r\n              <Link to=\"/login\">Log in</Link>\r\n              <Link to=\"/signup\">Sign up</Link>\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n              <Link to=\"/userInfo\">User info</Link>\r\n              <Link to=\"/favorites\">My Favorites</Link>\r\n            { user?.biz && <Link to=\"/myBizCards\">My cards</Link> }\r\n              <Link onClick={logOut} to=\"#\" className=\"text-danger\">Log out</Link>\r\n            </React.Fragment>\r\n          }\r\n       \r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React, { useEffect, useState } from 'react';\r\nimport { getUserData, removeUserCardFav, updateUserCardsAddFav } from '../services/userSer';\r\n\r\nfunction CardsList(props) {\r\n\r\n  let [userData, setUserData] = useState();\r\n  let [update,forceUpdate] = useState(1)\r\n\r\n  useEffect(() => {\r\n    \r\n    setUserData(getUserData());\r\n  }, [])\r\n\r\n\r\n  const showBtnFav = (item) => {\r\n\r\n    if (!userData.cards.includes(item.bizNumber)) {\r\n      return (\r\n        <button onClick={async () => {\r\n        \r\n          await updateUserCardsAddFav(item.bizNumber);\r\n          \r\n          forceUpdate(update + 1);\r\n        \r\n        }} className=\"btn btn-success\">+ fav</button>\r\n      )\r\n    }\r\n    else {\r\n      return (<button onClick={async() => {\r\n        await removeUserCardFav(item.bizNumber)\r\n        forceUpdate(update+1);\r\n      }}  className=\"btn btn-warning\">- fav</button>)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row\">\r\n      {props.ar.map(item => {\r\n   \r\n        let bg = item.bizImage?.length > 2 ? item.bizImage : '/images/default.jpg'\r\n        return (\r\n          <div key={item._id} className=\"col-lg-4 p-3\">\r\n            <div className=\"border\">\r\n             \r\n              <div className=\"biz_img\" style={{\r\n                backgroundImage: `url(${bg})`\r\n              }} >\r\n\r\n              </div>\r\n              <article className=\"p-3\">\r\n                <h2>{item.bizName}</h2>\r\n                <p>{item.bizDescription}</p>\r\n                <hr />\r\n                <div><strong>Phone:</strong> {item.bizPhone}</div>\r\n                <div><strong>Address:</strong> {item.bizAddress}</div>\r\n                <div><strong>Biz number:</strong> {item.bizNumber}</div>\r\n                {userData._id ? showBtnFav(item) :\r\n                  <small className=\"text text-danger\">* log in to add to favorite</small>}\r\n              </article>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default CardsList\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction PageHeader(props){\r\n  return(\r\n    <div className=\"my-4\">\r\n      <h1>\r\n      {props.title}</h1>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default PageHeader","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiGet, PER_PAGE } from '../../services/apiSer';\r\n\r\nfunction Pagenation(props){\r\n  let [countPage,setCountPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  },[])\r\n\r\n  const doApi = async() => {\r\n    let url = API_URL+props.urlOfItemNum\r\n    let data = await doApiGet(url);\r\n    setCountPage(Math.ceil(data.count / PER_PAGE));\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <span>Page: </span>\r\n       {[...Array(countPage)].map((item,i) => {\r\n         return(\r\n         <Link key={i} to={props.linkTo+(i+1)} className=\"btn btn-dark me-1\" >{i + 1}</Link>\r\n         )\r\n       }) }\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Pagenation","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, doApiGet } from '../services/apiSer';\r\n\r\nimport CardsList from './CardsList';\r\nimport PageHeader from './common/pageHeader';\r\nimport Pagenation from './common/pagenation';\r\n\r\nfunction Home(props) {\r\n  let [cards_ar, setCardsAr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const quries = new URLSearchParams(window.location.search);\r\n    let page = quries.get('page') ? quries.get('page') - 1 : 0;\r\n    let url = API_URL + '/cards?reverse=yes&page=' + page;\r\n    doApi(url);\r\n  }, [props.location]);\r\n\r\n  const doApi = async (_url) => {\r\n    let data = await doApiGet(_url);\r\n    setCardsAr(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <PageHeader title='Welcome to home page' />\r\n        <Pagenation urlOfItemNum='/cards/totalCards' linkTo='/?page=' />\r\n        <CardsList ar={cards_ar} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction About(props){\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"About\"/>\r\n      <p>\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Neque eveniet natus ullam repellat. Reprehenderit nulla enim ab quia similique sit recusandae iure quasi iusto officiis, praesentium dolorem consequuntur odit mollitia quo eligendi vero aspernatur, accusantium optio vitae minima, neque iste! Porro illo doloribus quo officiis molestiae ut quas at voluptatem praesentium voluptatum optio sapiente quos ipsam repudiandae omnis laboriosam, magnam est accusantium fuga, harum consequatur maxime! Quos magnam, voluptatum iure est suscipit vel, laborum, impedit doloribus sunt nesciunt autem accusamus minus dicta doloremque veritatis. Nihil aut doloribus quis eligendi, fugit itaque aperiam earum numquam sit maiores a! In, dignissimos hic!\r\n      </p>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction Page404(props){\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"Page not found , 404!\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Page404","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport PageHeader from './common/pageHeader';\r\n \r\nfunction SignUpClient(props){\r\n  let {register , handleSubmit ,  formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  const onSubForm = async(formData) => {\r\n    let url = API_URL+\"/users/\";\r\n    try{\r\n      let data = await doApiMethod(url,\"POST\",formData);\r\n      if(data._id){\r\n        toast.success(\"You sign up successfuly!\")\r\n        history.push(\"/login\");\r\n      }\r\n      else{\r\n        toast.error(\"There probelm , come back later and try again\")\r\n      }\r\n    }\r\n    catch(err){\r\n      if(err.response.data.code){\r\n        toast.error(\"User already in systme , try login\");\r\n      }\r\n      else {\r\n        toast.error(\"There probelm , come back later and try again\");\r\n      }\r\n    }\r\n  }\r\n\r\n  let emailRef = register(\"email\",{\r\n    required:true,  \r\n    pattern:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n  })\r\n\r\n  let passwordRef =  register(\"password\",{required:true, minLength:3}) ;\r\n  let nameRef = register(\"name\",{required:true, minLength:2})\r\n  let checkRef = register(\"biz\",{required:false})\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    \r\n    <form onSubmit={handleSubmit(onSubForm)} className=\"col-lg-6 mx-auto shadow p-3 rounded mt-3\">\r\n      <PageHeader title=\"Sign up new user\"/>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input {...emailRef} type=\"text\" className=\"form-control\" />\r\n        {errors.email && <span className=\"text-danger\">Enter valid email</span>}\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input {...passwordRef} type=\"text\" className=\"form-control\" />\r\n        {errors.password && <span className=\"text-danger\">Enter min 3 charts password</span>}\r\n      </div>\r\n      <div>\r\n        <label>Full name:</label>\r\n        <input {...nameRef} type=\"text\" className=\"form-control\" />\r\n        {errors.fullName && <span className=\"text-danger\">Enter min 2 charts name</span>}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <input {...checkRef}  type=\"checkbox\" className=\"form-check-input me-2\" />\r\n        <label>I am Business</label>\r\n      </div>\r\n      <button className=\"btn btn-info mt-3\">Sign up</button>\r\n    </form>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SignUpClient","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {toast} from \"react-toastify\";\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport PageHeader from './common/pageHeader';\r\nimport { updateUserData} from '../services/userSer';\r\n\r\n\r\nfunction Login(props){\r\n  let {register , handleSubmit ,  formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  const onSubForm = async(formData) => {\r\n    try{\r\n\r\n      let url = API_URL+\"/users/login\";\r\n      let data = await doApiMethod(url,\"POST\",formData);\r\n      localStorage.setItem(\"tok\",data.token);\r\n      await updateUserData();\r\n      toast.success(\"You logged in !\");\r\n      history.push(\"/userInfo\");\r\n    }\r\n    catch(err){\r\n      toast.error(\"User or password worng!\");\r\n    }\r\n\r\n  }\r\n\r\n  // register -> ref= useRef()\r\n  let emailRef = register(\"email\",{\r\n    required:true,  \r\n    pattern:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n  })\r\n\r\n  let passwordRef =  register(\"password\",{required:true, minLength:3}) ;\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    <form onSubmit={handleSubmit(onSubForm)} className=\"col-lg-6 mx-auto shadow p-3 rounded mt-3\">\r\n      <PageHeader title=\"Log in\" />\r\n      <div>\r\n        <label>Email:</label>\r\n        <input {...emailRef} type=\"text\" className=\"form-control\" />\r\n        {errors.email && <span className=\"text-danger\">Enter valid email</span>}\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input {...passwordRef} type=\"text\" className=\"form-control\" />\r\n        {errors.password && <span className=\"text-danger\">Enter min 3 charts password</span>}\r\n      </div>\r\n     \r\n      <button className=\"btn btn-success mt-3\">Log in</button>\r\n    </form>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\n\r\nfunction Footer(props){\r\n  return(\r\n    <p className=\"border-top pt-3 text-center\">\r\n      Cards App © {new Date().getFullYear()} - 1991\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction UserInfo(props) {\r\n  let [userInfo, setUserInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  }, []);\r\n\r\n  const doApi = async () => {\r\n    let url = API_URL + '/users/userInfo';\r\n    let data = await doApiMethod(url, 'GET');\r\n    data.dateCreated = data.createdAt.substr(0, data.createdAt.indexOf('T'));\r\n    setUserInfo(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader title='Info about your user:' />\r\n      <div>\r\n        <h4 className='h5'>Name: {userInfo.name}</h4>\r\n        <h4 className='h5'>Email: {userInfo.email}</h4>\r\n        <h4 className='h5'>Sign up data: {userInfo.dateCreated}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import { API_URL, doApiMethod } from \"./apiSer\"\r\n\r\nexport const checkIfUser = async() => {\r\n  if(!localStorage[\"tok\"]){\r\n    return {err:\"No token in localstorage\"}\r\n  }\r\n  try{\r\n    let url = API_URL+\"/users/authUser\";\r\n    let data = await doApiMethod(url,\"GET\");\r\n    return data;\r\n  }\r\n  catch(err){\r\n    return err;\r\n  }\r\n}","import React from 'react';\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { checkIfUser } from '../../services/authSer';\r\nimport { getUserData } from '../../services/userSer';\r\n\r\nfunction ProtectedRoute(props) {\r\n  let history = useHistory();\r\n\r\n  const checkTokenUser = async () => {\r\n    let data = await checkIfUser()\r\n  \r\n    if(props.bizRoute){\r\n      let user = getUserData();\r\n      if(!user.biz){\r\n        toast.warning(\"You must be business\");\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n\r\n    if (!data.status) {\r\n      toast.error(\"There problem, log in again\");\r\n      localStorage.removeItem(\"tok\");\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Route exact path={props.path}\r\n      render={() => {\r\n        checkTokenUser();\r\n        return (<props.comp {...props}  />);\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\n\r\n\r\nimport CardsList from './CardsList';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction FavoriteCards(props){\r\n  let [cards_ar,setCardsAr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = API_URL + \"/users/userCardsFav\";\r\n    doApi(url)\r\n  },[])\r\n\r\n  const doApi = async(_url) => {\r\n    try{\r\n    let data = await doApiMethod(_url,\"GET\");\r\n    setCardsAr(data);\r\n    }\r\n    catch(err){\r\n      console.log(err.response)\r\n    }\r\n  }\r\n\r\n \r\n  return(\r\n    <div>\r\n      <PageHeader title=\"Your favorite business cards\" />\r\n      <CardsList ar={cards_ar}/>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default FavoriteCards","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { API_URL, doApiMethod } from '../../services/apiSer';\r\nimport PageHeader from '../common/pageHeader';\r\n\r\nfunction MyCards(props) {\r\n  let [ar, setAr] = useState([])\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  }, [props.location])\r\n\r\n  const doApi = async () => {\r\n    let url = API_URL + \"/cards/userCardsAdded?perPage=999\";\r\n    let data = await doApiMethod(url, \"GET\");\r\n    data.reverse();\r\n    setAr(data);\r\n  }\r\n\r\n  const delCard = async(_id) => {\r\n    if(window.confirm(\"Are you sure you want to del?\")){\r\n      let url = API_URL+ \"/cards/\"+_id;\r\n      let data = await doApiMethod(url,\"DELETE\");\r\n      if(data.n === 1){\r\n        doApi();\r\n        toast.info(\"Card deleted forever!!!!!!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PageHeader title=\"Biz cards you added before:\" />\r\n      <Link className=\"btn btn-success\" to=\"/addCard\">Add new biz card</Link>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Descrption</th>\r\n              <th>Address</th>\r\n              <th>Phone</th>\r\n              <th>edit/del</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ar.map((item, i) => {\r\n              return (\r\n                <tr key={item._id}>\r\n                  <td>{i+1}</td>\r\n                  <td>{item.bizName}</td>\r\n                  <td>{item.bizDescription.substr(0,40)}...</td>\r\n                  <td>{item.bizAddress}</td>\r\n                  <td>{item.bizPhone}</td>\r\n                  <td className=\"text-center\">\r\n                    <Link to={\"/editCard/\"+item._id}>\r\n                    <button>edit</button>\r\n                    </Link>\r\n                    <button onClick={() => {\r\n                      delCard(item._id);\r\n                    }} className=\"ms-2\" style={{ background: \"pink\" }}>del</button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyCards\r\n\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\";\r\nimport { API_URL, doApiMethod } from '../../services/apiSer';\r\n\r\nfunction AddCard(props) {\r\n\r\n  let { register, handleSubmit, formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  let nameRef = register(\"bizName\", { required: true, minLength: 2 });\r\n  let descRef = register(\"bizDescription\", { required: true, minLength: 2 });\r\n  let addressRef = register(\"bizAddress\", { required: true, minLength: 2 });\r\n  let phoneRef = register(\"bizPhone\", { required: true, minLength: 2 });\r\n  let imageRef = register(\"bizImage\", { required: false });\r\n\r\n  const onSubForm = async (dataForm) => {\r\n\r\n    try {\r\n      let url = API_URL + \"/cards\";\r\n      let data = await doApiMethod(url, \"POST\", dataForm);\r\n      if (data._id){\r\n        toast.success(\"Card been added\");\r\n        history.push(\"/myBizCards\");\r\n      }\r\n    }\r\n    catch (err) {\r\n      toast.error(\"There problem, come back next year!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add new card to your biz:</h1>\r\n      <form onSubmit={handleSubmit(onSubForm)} className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz name</label>\r\n          <input {...nameRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizName &&\r\n            <small className=\"text-danger\">* You must fill your name</small>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz address</label>\r\n          <input  {...addressRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizAddress &&\r\n            <small className=\"text-danger\">* You must Enter valid address</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz phone</label>\r\n          <input  {...phoneRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizPhone &&\r\n            <small className=\"text-danger\">* You must Enter valid Phone number</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz image url</label>\r\n          <input  {...imageRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizImage &&\r\n            <small className=\"text-danger\">* You must Enter valid url</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <label>*Biz info</label>\r\n          <textarea {...descRef} className=\"form-control\" rows=\"4\"></textarea>\r\n          {errors.bizDescription &&\r\n            <small className=\"text-danger\">* You must enter descrption of biz</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-12 text-center mb-3\">\r\n          <button className=\"btn btn-info  mt-4\">Add new biz card</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCard","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\";\r\nimport { API_URL, doApiGet, doApiMethod } from '../../services/apiSer';\r\n\r\n\r\nfunction EditCard(props) {\r\n  let [card,setCard] = useState({})\r\n\r\n  let { register, handleSubmit, setValue, formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  let nameRef = register(\"bizName\", { required: true, minLength: 2 });\r\n  let descRef = register(\"bizDescription\", { required: true, minLength: 2 });\r\n  let addressRef = register(\"bizAddress\", { required: true, minLength: 2 });\r\n  let phoneRef = register(\"bizPhone\", { required: true, minLength: 2 });\r\n  let imageRef = register(\"bizImage\", { required: false });\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  },[])\r\n\r\n\r\n  const doApi = async() => {\r\n    let url = API_URL+\"/cards/single/\"+props.computedMatch.params.id\r\n    let data = await doApiGet(url);\r\n    setCard(data);\r\n   \r\n    setValue(\"bizName\",data.bizName);\r\n    setValue(\"bizDescription\",data.bizDescription);\r\n    setValue(\"bizAddress\",data.bizAddress);\r\n    setValue(\"bizPhone\",data.bizPhone);\r\n    setValue(\"bizImage\",data.bizImage);\r\n  \r\n  }\r\n\r\n  const onSubForm = async (dataForm) => {\r\n    try {\r\n      let url = API_URL + \"/cards/\" + props.computedMatch.params.id;\r\n      let data = await doApiMethod(url, \"PUT\", dataForm);\r\n      if (data.n === 1){\r\n        toast.dark(\"Card been update\");\r\n        history.push(\"/myBizCards\");\r\n      }\r\n    }\r\n    catch (err) {\r\n      toast.error(\"There problem, come back next year!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit card:</h1>\r\n      <form onSubmit={handleSubmit(onSubForm)} className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz name</label>\r\n          <input {...nameRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizName &&\r\n            <small className=\"text-danger\">* You must fill your name</small>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz address</label>\r\n          <input  {...addressRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizAddress &&\r\n            <small className=\"text-danger\">* You must Enter valid address</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz phone</label>\r\n          <input   {...phoneRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizPhone &&\r\n            <small className=\"text-danger\">* You must Enter valid Phone number</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz image url</label>\r\n          <input  {...imageRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizImage &&\r\n            <small className=\"text-danger\">* You must Enter valid url</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <label>*Biz info</label>\r\n          <textarea {...descRef} className=\"form-control\" rows=\"4\"></textarea>\r\n          {errors.bizDescription &&\r\n            <small className=\"text-danger\">* You must enter descrption of biz</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-12 text-center mb-3\">\r\n          <Link to=\"/myBizCards\" className=\"btn btn-dark mt-4 me-2\">Back to list</Link>\r\n          <button className=\"btn btn-warning  mt-4\">Update biz card</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCard;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport './App.css';\r\nimport './css_comps/header_nav.css'\r\nimport './css_comps/card.css'\r\nimport NavBar from './comps/navbar';\r\nimport Home from './comps/home';\r\nimport About from './comps/about';\r\nimport Page404 from './comps/page404';\r\nimport SignUpClient from './comps/signup';\r\nimport Login from './comps/login';\r\nimport Footer from './comps/footer';\r\nimport UserInfo from './comps/userInfo';\r\nimport ProtectedRoute from './comps/common/protectedRoute';\r\nimport { useEffect, useState } from 'react';\r\nimport { updateUserData } from './services/userSer';\r\nimport FavoriteCards from './comps/favoriteCards';\r\nimport MyCards from './comps/biz/myCards';\r\nimport AddCard from './comps/biz/addCard';\r\nimport EditCard from './comps/biz/editCard';\r\n\r\nfunction App() {\r\n  let [user,setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    ifUserLogin()\r\n        \r\n  }, [])\r\n\r\n  const ifUserLogin = async() => {\r\n    let data = await updateUserData();\r\n    setUser(data);\r\n  }\r\n  \r\n  return (\r\n    <Router>\r\n      <header className=\"container-fluid shadow-sm\">\r\n        { user && <Route path=\"/\" component={NavBar} /> }\r\n      </header>\r\n      { user &&\r\n      <main className=\"container\" style={{ minHeight: \"81vh\" }}>\r\n    \r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/signup\" component={SignUpClient} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <ProtectedRoute path=\"/userInfo\" comp={UserInfo} />\r\n          <ProtectedRoute path=\"/favorites\" comp={FavoriteCards} />\r\n          <ProtectedRoute bizRoute={true} path=\"/myBizCards\" comp={MyCards} />\r\n          <ProtectedRoute bizRoute={true} path=\"/addCard\" comp={AddCard} />\r\n          <ProtectedRoute bizRoute={true} path=\"/editCard/:id\" comp={EditCard} />\r\n          <Route path=\"/\" component={Page404} />\r\n        </Switch>\r\n      </main>\r\n      }\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n      <ToastContainer position=\"top-left\"/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}